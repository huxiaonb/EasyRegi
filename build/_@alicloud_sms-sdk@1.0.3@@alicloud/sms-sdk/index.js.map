{"version":3,"sources":["_@alicloud_sms-sdk@1.0.3@@alicloud/sms-sdk/index.js"],"names":["DysmsapiClient","require","DybaseapiClient","MNSClient","msgTypeList","DYSMSAPI_ENDPOINT","DYBASEAPI_ENDPOINT","SMSClient","options","accessKeyId","secretAccessKey","TypeError","dysmsapiClient","endpoint","dybaseClient","expire","mnsClient","params","sendSms","querySendDetails","type","Date","getTime","msgType","queryTokenForMnsQueue","MessageType","_refresh","_getToken","MessageTokenDTO","SecurityToken","AccessKeyId","AccessKeySecret","securityToken","region","accessKeySecret","secure","internal","vpc","typeIndex","preQueueName","waitSeconds","_getMNSClient","receiveMessage","module","exports"],"mappings":"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","file":"_@alicloud_sms-sdk@1.0.3@@alicloud/sms-sdk/index.js","sourcesContent":["'use strict';\n\nconst DysmsapiClient = require('@alicloud/dysmsapi')\nconst DybaseapiClient = require('@alicloud/dybaseapi')\nconst MNSClient = require('@alicloud/mns')\n\n// 短信回执报告：SmsReport，短信上行：SmsUp\nconst msgTypeList = [\"SmsReport\", \"SmsUp\"]\n\nconst DYSMSAPI_ENDPOINT = 'http://dysmsapi.aliyuncs.com'\nconst DYBASEAPI_ENDPOINT = 'http://dybaseapi.aliyuncs.com'\n\n\nclass SMSClient {\n    constructor(options) {\n        let {accessKeyId, secretAccessKey}=options\n        if (!accessKeyId) {\n            throw new TypeError('parameter \"accessKeyId\" is required');\n        }\n        if (!secretAccessKey) {\n            throw new TypeError('parameter \"secretAccessKey\" is required');\n        }\n        this.dysmsapiClient = new DysmsapiClient({accessKeyId, secretAccessKey, endpoint: DYSMSAPI_ENDPOINT})\n        this.dybaseClient = new DybaseapiClient({accessKeyId, secretAccessKey, endpoint: DYBASEAPI_ENDPOINT})\n        this.expire = []\n        this.mnsClient = []\n    }\n\n    //发送短信\n    sendSMS(params) {\n        return this.dysmsapiClient.sendSms(params)\n    }\n\n    //查询详情\n    queryDetail(params) {\n        return this.dysmsapiClient.querySendDetails(params)\n    }\n\n    //失效时间与当前系统时间比较，提前2分钟刷新token\n    _refresh(type) {\n        return this.expire[type] - new Date().getTime() > 2 * 60 * 1000\n    }\n\n    //获取token\n    _getToken(type) {\n        let msgType = msgTypeList[type]\n        return this.dybaseClient.queryTokenForMnsQueue({MessageType: msgType})\n    }\n\n    //根据类型获取mnsclient实例\n    async _getMNSClient(type) {\n        if (this.mnsClient && (this.mnsClient[type] instanceof MNSClient) && this._refresh(type)) {\n            return this.mnsClient[type]\n        }\n\n        let {\n            MessageTokenDTO:{\n                SecurityToken,\n                AccessKeyId,\n                AccessKeySecret\n            }\n        }=await this._getToken(type)\n\n\n        if (!(AccessKeyId && AccessKeySecret && SecurityToken)) {\n            throw new TypeError('get token fail')\n        }\n\n\n        let mnsClient = new MNSClient('1943695596114318', {\n            securityToken: SecurityToken,\n            region: 'cn-hangzhou',\n            accessKeyId: AccessKeyId,\n            accessKeySecret: AccessKeySecret,\n            // optional & default\n            secure: false, // use https or http\n            internal: false, // use internal endpoint\n            vpc: false // use vpc endpoint\n        })\n        this.mnsClient[type] = mnsClient\n        this.expire[type] = (new Date().getTime() + 10 * 60 * 1000)\n        return mnsClient\n    }\n\n    //typeIndex :0 为回执,1为上行\n    async receiveMsg(typeIndex = 0, preQueueName, waitSeconds = 10) {\n        let mnsClient = await this._getMNSClient(typeIndex)\n        return await mnsClient.receiveMessage(preQueueName + msgTypeList[typeIndex], waitSeconds)\n    }\n\n}\n\nmodule.exports = SMSClient\n\n\n\n\n"],"sourceRoot":"/source/"}